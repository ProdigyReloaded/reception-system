{ Program 'MSZB010X' compiled with TBOL COMPILER version 4.210 }
{ Date Program compiled 08/21/89 16:020 }

COPY XXCGTSYS;
COPY MSZXCOPY;


PROC main =
    IF TTX_ASST_EVENT = 'ZIP' AND P3 <> TWO THEN DO
        LINK LOOKZIP_PGM, ONE;
        MOVE TWO, P2;
        MOVE THREE, P3;
    END;

    IF P3 = ONE THEN DO
        AND '\xfe', SYS_MESSAGING_STATUS;
        RESTORE 'MS_ZBHL', $44;
        IF SYS_RETURN_CODE = RET_OK THEN
            RELEASE 'MS_ZBHL';

        RESTORE 'MS_ZB0', P4;
        IF SYS_RETRUN_CODE <> '14' THEN DO
            RELEASE 'MS_ZB0';
            MOVE $94, CURRENT_PAGE;
            MOVE TWO, P2;
        END; ELSE DO
            MOVE ONE, $210;
            MOVE ONE, CURRENT_PAGE;
            FILL $100, NULL, '768';
            MOVE $100, $101;
            MOVE $100, $104;
            CLEAR MAILBOX_PAGES(ONE), $169;              { think these are the mailbox pages (..$168)}
            MOVE ZERO, $105;
            MOVE SYS_MESSAGING_STATUS, P8;
            AND '\x02', P8;
            IF P8 <> NULL THEN
                CLEAR &1, &63;
        END;
        MOVE MODE_REVIEW, APPLICATION_MODE;
    END;

    IF P3 <> TWO THEN DO
        MOVE 'DELETE', DELETE;
        MOVE 'RETAIN', RETAIN;
        MOVE MSZB014X_PGM, $59;
        MOVE ZERO, $56;
        IF APPLICATION_MODE = MODE_REVIEW THEN DO
            STRING P8, 'dddRF64A05WRITEA06', DELETE, 'A06', RETAIN, 'A05PRINT';
            LINK MSZX010X_PGM, ONE, '68', P8;
        END;
        MOVE MSZB011X_PGM, $47;
        LINK MSZX010X_PGM, THREE, ONE, ONE, ONE;
    END;

    IF TTX_ASST_EVENT = 'ZIP' THEN DO
        IF $98 = ZERO THEN
            show_dialog MSZB011X_WND, ONE;
        IF $98 = '-1' THEN
            show_dialog MSZB010X_WND, ZERO;
    END;

    IF P2 = ONE THEN DO
        get_mailbox_page;
        IF $213 = ONE THEN DO
            MOVE '-1', $98;
            show_dialog MSZB010X_WND, ZERO;
        END;
    END;

    IF P2 <> THREE THEN
        process_mailbox_page_response;

    IF P1 <> THREE THEN DO
        IF $98 > ZERO THEN
            display_mailbox_page P1;
        ELSE
            show_dialog MSZB011X_WND, ONE;
        SET_CURSOR $210;
        LINK MSZX010X_PGM, SIX, '04', MSZB015X_PGM;
    END;
    CLEAR TTX_ASST_EVENT;
    IF P4 = TWO THEN
        EXIT HALT;
END_PROC;

PROC display_mailbox_page =
    IF P1 = ONE THEN
        CLEAR &1, &40;

    CLEAR P2;
    MOVE ONE, I1;
    MOVE CURRENT_PAGE, I2;
    MUL '12', I2;
    SUB '11', I2;

    WHILE I1 <= THREE THEN DO
        IF I1 <= $99 THEN DO
            IF P1 <> TWO THEN DO
                SUBSTR $100, P8, I2, ONE;
                IF P8 <> NULL THEN
                    MOVE DELETE(P8), SCR_MSG_DELETE_DATE(I1);
                ELSE DO
                    MOVE MSG_DELETE_DATE(I1), SCR_MSG_DELETE_DATE(I1);
                    MOVE '\x40', P8;
                    AND MSG_FLAG_1(I1), P8;
                    IF P8 <> NULL THEN
                        STRING SCR_MSG_DELETE_DATE(I1), SCR_MSG_DELETE_DATE(I1), 'R';
                END;
            END;

            IF P1 = ONE THEN DO
                MOVE MSG_FROM(I1), SCR_MSG_FROM(I1);
                MOVE MSG_SENT_DATE(I1), SCR_MSG_SENT_DATE(I1);
                MOVE MSG_SUBJECT(I1), SCR_MSG_SUBJECT(I1);
                MOVE '\x10', P8;
                AND MSG_FLAG_1(I1), P8;
                IF P8 = NULL THEN
                    MOVE '*', SCR_MSG_UNREAD(I1);
            END;

          IF APPLICATION_MODE = MODE_REVIEW THEN DO
            MOVE I1, P8;
            STRING P2, P2, 'F0', P8, 'A01', P8;
          END; ELSE DO
            SUBSTR $101, P8, I2, ONE;
            IF P8 = APPLICATION_MODE THEN DO
                MOVE 'DR', P7;
                SUBSTR P7, P8, P8, ONE;
            END; ELSE
                MOVE $35, P8;
            MOVE I1, P7;
            STRING P2, P2, 'F0', P7, 'I01', P8;
          END;
        END; ELSE
            STRING P2, P2, 'd';

        ADD ONE, I1;
        ADD THREE, I2;
    END;

    IF P2 <> $34 THEN
        LINK MSZX010X_PGM, ONE, ONE, P2;
END_PROC;

PROC get_mailbox_page =
    MOVE ZERO, $213;

    IF SYS_NOCOMM = ONE THEN
      FETCH MSZB025X_PGM(CURRENT_PAGE), RESPONSE;                  { fetch a program? was FETCH $89($36), RESPONSE; }
    ELSE DO
      RECEIVE MSG_ID, RESPONSE;
      WHILE SYS_RETURN_CODE <> RET_TIMEOUT AND SYS_RETURN_CODE <> RET_OK THEN
        RECEIVE MSG_ID, RESPONSE;
    END;

    LENGTH RESPONSE, P1;
    IF SYS_RETURN_CODE = RET_TIMEOUT OR P1 = ONE THEN
        MOVE ONE, $213;
    ELSE
        MOVE RESPONSE, MAILBOX_PAGES(CURRENT_PAGE);
END_PROC;

PROC process_mailbox_page_response =
    MOVE MAILBOX_PAGES(CURRENT_PAGE), P1;
    SUBSTR P1, P2, ONE, TWO;
    MOVE P2, I1, ABS;
    MOVE I1, $98;

    IF $98 > '252' THEN
        MOVE '252', $98;

    IF $98 = ZERO THEN
        RETURN;

    SUBSTR P1, P2, THREE, ONE;
    MOVE P2, I1, ABS;
    MOVE I1, $99;
    MOVE $98, I1;
    ADD THREE, I1;
    DIVIDE FOUR, I1;
    MOVE I1, LAST_PAGE;
    MOVE ONE, I1;
    MOVE FOUR, I2;

    WHILE I1 <= $99 THEN DO

        IF I1 > $99 THEN                    { Seems superfluous as execution should never reach here given the WHILE expression above }
            RETURN;

        SUBSTR P1, MSG_INDEX(I1), I2, TWO;
        ADD TWO, I2;
        SUBSTR P1, MSG_FROM_ID(I1), I2, SEVEN;
        ADD SEVEN, I2;
        SUBSTR P1, MSG_FLAG_1(I1), I2, ONE;
        ADD ONE, I2;
        SUBSTR P1, MSG_FLAG_2(I1), I2, ONE;
        ADD ONE, I2;
        SUBSTR P1, MSG_SENT_DATE(I1), I2, FIVE;
        ADD FIVE, I2;
        SUBSTR P1, MSG_DELETE_DATE(I1), I2, FIVE;
        MOVE I2, MSG_UNKNOWN(I1), ABS;
        ADD FIVE, I2;
        SUBSTR P1, P2, I2, ONE;
        ADD ONE, I2;
        MOVE P2, I3, ABS;
        SUBSTR P1, MSG_FROM(I1), I2, I3;
        ADD I3, I2;
        SUBSTR P1, P2, I2, ONE;
        ADD ONE, I2;
        MOVE P2, I3, ABS;
        SUBSTR P1, MSG_SUBJECT(I1), I2, I3;
        ADD I3, I2;
        MOVE MSG_FLAG_1(I1), P2;
        AND '\x80', P2;

        IF P2 <> NULL THEN DO
            SUBSTR P1, MSG_OBJECT(I1), I2, OBJECT_ID_LENGTH;
            ADD OBJECT_ID_LENGTH, I2;
        END;

        ADD ONE, I1;
    END;
END_PROC;

PROC show_dialog =
    LINK MSZX010X_PGM, ONE, ONE, 'ddddF65ddddddF98D';
    MOVE ONE, SCR_CURRENT_PAGE;
    MOVE ONE, SCR_LAST_PAGE;
    OPEN_WINDOW P1;
    CLEAR TTX_ASST_EVENT;
    EXIT HALT;
END_PROC;
